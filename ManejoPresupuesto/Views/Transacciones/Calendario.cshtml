@{
    ViewData["Title"] = "Reporte Calendario";
}
<partial name="_SubMenu" Model="SubMenuTransacciones.Calendario" />

<div id="calendario"></div>

@* Modal para el calendario *@
<div class="modal fade" id="modal-transacciones" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-header">
            <h5 class="modal-title">Transacciones del día</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
            <table class="table">
                <thead>
                    <tr>
                        <th id="modalTablaFecha" colspan="2"></th>
                        <th id="modalTablaIngresos" class="activo"></th>
                        <th id="modalTablaGastos" class="pasivo"></th>
                    </tr>
                </thead>
                <tbody id="modalTablaCuerpo">
                    @* Aquí va la data que se genera desde js *@
                </tbody>
            </table>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/lib/fullcalendar/main.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const calendarioEl = document.getElementById('calendario');
            const calendario = new FullCalendar.Calendar(calendarioEl, {
                dayMaxEventRows: 3,
                initialView: 'dayGridMonth',
                events: '/transacciones/ObtenerTransaccionesCalendario',
                dateClick: async function (info) {
                    await buscarTransaccionesPorFecha(info.dateStr);
                }
            });
            calendario.render();
        })

        async function buscarTransaccionesPorFecha(fecha) {
            const response = await fetch(`/transacciones/ObtenerTransaccionesPorFecha?fecha=${fecha}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            const data = await response.json();
            console.log(data);
            return data;

        }
    </script>
}